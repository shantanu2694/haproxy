#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2
    tune.ssl.default-dh-param 2048
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     3000
    user        haproxy
    group       haproxy
    daemon

    tune.maxrewrite 65536
    tune.bufsize 65536

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#------------------------------------
# Applicatiom Load Balancer FrendEnd
#------------------------------------
frontend  main 
    bind*:80
 	
	acl url_app_name path_beg App_path
	acl url_haproxy path_beg /haproxy?stats	

	use_backend app_admin1 if url_app_name
	use_backend app_haproxy if url_haproxy

## if you require CORS filer at haproxy level uncomment the below lines	
    #capture request header origin len 128
    #http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
    #rspadd Access-Control-Allow-Headers:\ Origin,\ X-Requested-With,\ Content-Type,\ Accept  if { capture.req.hdr(0) -m found }

    default_backend             app_admin1


#---------------------------------------------------------------------
# round robin balancing between the various backends (with session stickyness) (UI layer)
#---------------------------------------------------------------------
backend app_admin1
    balance     roundrobin
    cookie JSESSIONID prefix nocache
    option httpchk HEAD /App_path HTTP/1.1\r\nHost:localhost
    server  app_cluster1 127.0.0.1:cluster1 check inter 3000 cookie s1
    server  app_cluster2 127.0.0.1:cluster2 check inter 3000 cookie s2
    server  app_cluster3 127.0.0.1:cluster3 check inter 3000 cookie s3

#---------------------------------------------------------------------
# Haproxy monitor port (access it like:  https://115.124.99.97/haproxy?stats)
#---------------------------------------------------------------------
backend app_haproxy
    balance     roundrobin
    server  app_1936 127.0.0.1:1936

#---------------------------------------------------------------------
# Haproxy monitor port (access it like:  https://115.124.99.97/haproxy?stats)
#---------------------------------------------------------------------
listen  stats   *:1936
        mode            http
        log             global

        maxconn 10

        clitimeout      100s
        srvtimeout      100s
        contimeout      100s
        timeout queue   100s

        stats enable
        stats hide-version
        stats refresh 60s
        stats show-node
        stats auth haproxy:password
        stats uri  /haproxy?stats


